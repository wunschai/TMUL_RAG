{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\libproject\\\\TMUL_RAG\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport styled from '@emotion/styled';\nimport Header from './Header';\nimport MessageList from './MessageList';\nimport InputArea from './InputArea';\nimport QuickQuestions from './QuickQuestions';\nimport { useChat } from '../contexts/ChatContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = ChatContainer;\nconst MainArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c2 = MainArea;\nfunction ChatInterface() {\n  _s();\n  const {\n    messages,\n    loading,\n    addMessage\n  } = useChat();\n  const handleSendMessage = text => {\n    addMessage({\n      type: 'user',\n      content: text,\n      timestamp: new Date().toISOString()\n    });\n\n    // 模擬機器人回覆\n    setTimeout(() => {\n      addMessage({\n        type: 'bot',\n        content: '這是一個測試回覆',\n        timestamp: new Date().toISOString()\n      });\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainArea, {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuickQuestions, {\n        onQuestionSelect: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n        onSend: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"Ns/FOC0ZXbxxLl+5gkjiFMJj3n8=\", false, function () {\n  return [useChat];\n});\n_c3 = ChatInterface;\nexport default ChatInterface;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"MainArea\");\n$RefreshReg$(_c3, \"ChatInterface\");","map":{"version":3,"names":["styled","Header","MessageList","InputArea","QuickQuestions","useChat","jsxDEV","_jsxDEV","ChatContainer","div","_c","MainArea","_c2","ChatInterface","_s","messages","loading","addMessage","handleSendMessage","text","type","content","timestamp","Date","toISOString","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onQuestionSelect","onSend","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/libproject/TMUL_RAG/src/components/ChatInterface.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport Header from './Header';\r\nimport MessageList from './MessageList';\r\nimport InputArea from './InputArea';\r\nimport QuickQuestions from './QuickQuestions';\r\nimport { useChat } from '../contexts/ChatContext';\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst MainArea = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nfunction ChatInterface() {\r\n  const { messages, loading, addMessage } = useChat();\r\n\r\n  const handleSendMessage = (text: string) => {\r\n    addMessage({\r\n      type: 'user',\r\n      content: text,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n    \r\n    // 模擬機器人回覆\r\n    setTimeout(() => {\r\n      addMessage({\r\n        type: 'bot',\r\n        content: '這是一個測試回覆',\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <Header />\r\n      <MainArea>\r\n        <MessageList messages={messages} loading={loading} />\r\n        <QuickQuestions onQuestionSelect={handleSendMessage} />\r\n        <InputArea onSend={handleSendMessage} />\r\n      </MainArea>\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default ChatInterface; "],"mappings":";;AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGR,MAAM,CAACS,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,aAAa;AAMnB,MAAMG,QAAQ,GAAGX,MAAM,CAACS,GAAG;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,QAAQ;AAOd,SAASE,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEnD,MAAMa,iBAAiB,GAAIC,IAAY,IAAK;IAC1CF,UAAU,CAAC;MACTG,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEF,IAAI;MACbG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC,CAAC;;IAEF;IACAC,UAAU,CAAC,MAAM;MACfR,UAAU,CAAC;QACTG,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE,UAAU;QACnBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEjB,OAAA,CAACC,aAAa;IAAAkB,QAAA,gBACZnB,OAAA,CAACN,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA,CAACI,QAAQ;MAAAe,QAAA,gBACPnB,OAAA,CAACL,WAAW;QAACa,QAAQ,EAAEA,QAAS;QAACC,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDvB,OAAA,CAACH,cAAc;QAAC2B,gBAAgB,EAAEb;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDvB,OAAA,CAACJ,SAAS;QAAC6B,MAAM,EAAEd;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB;AAAChB,EAAA,CA9BQD,aAAa;EAAA,QACsBR,OAAO;AAAA;AAAA4B,GAAA,GAD1CpB,aAAa;AAgCtB,eAAeA,aAAa;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}