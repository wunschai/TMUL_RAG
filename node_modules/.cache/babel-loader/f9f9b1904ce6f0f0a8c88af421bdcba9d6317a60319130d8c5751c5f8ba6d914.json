{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\libproject\\\\TMUL_RAG\\\\src\\\\contexts\\\\ChatContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext(undefined);\nexport function ChatProvider({\n  children\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const addMessage = message => {\n    setMessages(prev => [...prev, message]);\n  };\n  const clearMessages = () => {\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      messages,\n      loading,\n      setLoading,\n      addMessage,\n      clearMessages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatProvider, \"hq4AwCU/cjqbSZgH8tz5GrloLy8=\");\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n  const context = useContext(ChatContext);\n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n_s2(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ChatContext","undefined","ChatProvider","children","_s","messages","setMessages","loading","setLoading","addMessage","message","prev","clearMessages","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/user/Desktop/libproject/TMUL_RAG/src/contexts/ChatContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { ChatContextType, Message } from '../types/chat';\r\n\r\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\r\n\r\nexport function ChatProvider({ children }: { children: React.ReactNode }) {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const addMessage = (message: Message) => {\r\n    setMessages(prev => [...prev, message]);\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    setMessages([]);\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{\r\n      messages,\r\n      loading,\r\n      setLoading,\r\n      addMessage,\r\n      clearMessages\r\n    }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useChat = () => {\r\n  const context = useContext(ChatContext);\r\n  if (context === undefined) {\r\n    throw new Error('useChat must be used within a ChatProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,UAAU,GAAIC,OAAgB,IAAK;IACvCJ,WAAW,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;EACzC,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BN,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAC3BT,QAAQ;MACRE,OAAO;MACPC,UAAU;MACVC,UAAU;MACVG;IACF,CAAE;IAAAT,QAAA,EACCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACd,EAAA,CAvBeF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAyB5B,OAAO,MAAMkB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG1B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAIsB,OAAO,KAAKrB,SAAS,EAAE;IACzB,MAAM,IAAIsB,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}